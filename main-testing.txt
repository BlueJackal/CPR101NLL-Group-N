1 - Fundamentals
2 - Manipulation
3 - Converting
4 - Tokenizing
0 - Exit
Which module to run?
1
*** Start of Indexing Strings Demo ***
Type not empty string (q - to quit):
q
*** End of Indexing Strings Demo ***

*** Start of Measuring Strings Demo ***
Type a string (q - to quit):
q
The length of 'q' is 1 characters
*** End of Measuring Strings Demo ***

*** Start of Copying Strings Demo ***
Destination string is reset to empty
Type the source string (q - to quit):
q
New destination string is 'q'
*** End of Copying Strings Demo ***

1 - Fundamentals
2 - Manipulation
3 - Converting
4 - Tokenizing
0 - Exit
Which module to run?
2
*** Start of Concatenating Strings Demo ***
Type the 1st string (q - to quit):
q
*** End of Concatenating Strings Demo ***

*** Start of Comparing Strings Demo ***
Type the 1st string to compare (q - to quit):
q
Type the 2nd string to compare:
q
'q' string is equal to 'q'
*** End of Comparing Strings Demo ***

*** Start of Searching Strings Demo ***
Type the string (q - to quit):
q
Type the substring:
q
'q' found at 0 position
*** End of Searching Strings Demo ***

1 - Fundamentals
2 - Manipulation
3 - Converting
4 - Tokenizing
0 - Exit
Which module to run?
3
*** Start of Converting Strings to int Demo ***
Type an int numeric string (q - to quit:
q
*** End of Converting Strings to int Demo ***

*** Start of Converting Strings to double Demo ***
Type the double numberic string (q - to quit):
q
*** End of Converting Strings to double Demo ***

*** Start of Converting Strings to long Demo ***
Type the long numeric string (q - to quit):
q
*** End of Converting Strings to long Demo ***

1 - Fundamentals
2 - Manipulation
3 - Converting
4 - Tokenizing
0 - Exit
Which module to run?
4
*** Start of Tokenizing Words Demo ***
Type a few words separated by space (q - to quit):
q
*** End of Tokenizing Words Demo ***

*** Start of Tokenizing Phrases Demo ***
Type a few phrases separated by comma(q - to quit):
q
*** End of Tokenizing Phrases Demo ***

*** Start of Tokenizing Sentences Demo ***
Type a few sentences separated by dot(q - to quit):
q
*** End of Tokenizing Sentences Demo ***

1 - Fundamentals
2 - Manipulation
3 - Converting
4 - Tokenizing
0 - Exit
Which module to run?
1
*** Start of Indexing Strings Demo ***
Type not empty string (q - to quit):
Testing fundamentals by inputting this non-empty string
Type the character position within the string:
9
The character found at 9 position is 'u'
Type not empty string (q - to quit):
Test 1
Type the character position within the string:
3
The character found at 3 position is 't'
Type not empty string (q - to quit):
Test 2
Type the character position within the string:
3
The character found at 3 position is 't'
Type not empty string (q - to quit):
Test 3
Type the character position within the string:
2
The character found at 2 position is 's'
Type not empty string (q - to quit):
Test 4
Type the character position within the string:
1
The character found at 1 position is 'e'
Type not empty string (q - to quit):
Pumpkins are great
Type the character position within the string:
3
The character found at 3 position is 'p'
Type not empty string (q - to quit):
q
*** End of Indexing Strings Demo ***

*** Start of Measuring Strings Demo ***
Type a string (q - to quit):
Pumpkins are great
The length of 'Pumpkins are great' is 18 characters
Type a string (q - to quit):
test
The length of 'test' is 4 characters
Type a string (q - to quit):
test 2
The length of 'test 2' is 6 characters
Type a string (q - to quit):
test 3
The length of 'test 3' is 6 characters
Type a string (q - to quit):
test 4
The length of 'test 4' is 6 characters
Type a string (q - to quit):
q
The length of 'q' is 1 characters
*** End of Measuring Strings Demo ***

*** Start of Copying Strings Demo ***
Destination string is reset to empty
Type the source string (q - to quit):
Finals week is super stressful
New destination string is 'Finals week is super stressful'
Destination string is reset to empty
Type the source string (q - to quit):
Finals week is super stressful
New destination string is 'Finals week is super stressful'
Destination string is reset to empty
Type the source string (q - to quit):
Finals week is super stressful
New destination string is 'Finals week is super stressful'
Destination string is reset to empty
Type the source string (q - to quit):
Finals week is super stressful
New destination string is 'Finals week is super stressful'
Destination string is reset to empty
Type the source string (q - to quit):
q
New destination string is 'q'
*** End of Copying Strings Demo ***

1 - Fundamentals
2 - Manipulation
3 - Converting
4 - Tokenizing
0 - Exit
Which module to run?
2
*** Start of Concatenating Strings Demo ***
Type the 1st string (q - to quit):
first
Type the 2nd string:
 second
Concatenated string is 'first second'
Type the 1st string (q - to quit):
third
Type the 2nd string:
 fourth
Concatenated string is 'third fourth'
Type the 1st string (q - to quit):
fifth
Type the 2nd string:
 sixth
Concatenated string is 'fifth sixth'
Type the 1st string (q - to quit):
q
*** End of Concatenating Strings Demo ***

*** Start of Comparing Strings Demo ***
Type the 1st string to compare (q - to quit):
television
Type the 2nd string to compare:
pineapple
'television' string is greater than 'pineapple'
Type the 1st string to compare (q - to quit):
television
Type the 2nd string to compare:
pineapple
'television' string is greater than 'pineapple'
Type the 1st string to compare (q - to quit):
aligator
Type the 2nd string to compare:
airplane
'aligator' string is greater than 'airplane'
Type the 1st string to compare (q - to quit):
universe
Type the 2nd string to compare:
potto
'universe' string is greater than 'potto'
Type the 1st string to compare (q - to quit):
universe
Type the 2nd string to compare:
potato
'universe' string is greater than 'potato'
Type the 1st string to compare (q - to quit):
q
Type the 2nd string to compare:
q
'q' string is equal to 'q'
*** End of Comparing Strings Demo ***

*** Start of Searching Strings Demo ***
Type the string (q - to quit):
Around the world in 80 days
Type the substring:
world
'world' found at 11 position
Type the string (q - to quit):
The next avatar movie comes out soon
Type the substring:
avatar
'avatar' found at 9 position
Type the string (q - to quit):
vr headsets are pretty cool
Type the substring:
headsets
'headsets' found at 3 position
Type the string (q - to quit):
q
Type the substring:

'' found at 0 position
*** End of Searching Strings Demo ***

1 - Fundamentals
2 - Manipulation
3 - Converting
4 - Tokenizing
0 - Exit
Which module to run?
3
*** Start of Converting Strings to int Demo ***
Type an int numeric string (q - to quit:
1234
Converted number is 1234
Type an int numeric string (q - to quit:
1234
Converted number is 1234
Type an int numeric string (q - to quit:
5678
Converted number is 5678
Type an int numeric string (q - to quit:
9101112
Converted number is 9101112
Type an int numeric string (q - to quit:
1234
Converted number is 1234
Type an int numeric string (q - to quit:
q
*** End of Converting Strings to int Demo ***

*** Start of Converting Strings to double Demo ***
Type the double numberic string (q - to quit):
100
Converted number is 100.000000
Type the double numberic string (q - to quit):
200
Converted number is 200.000000
Type the double numberic string (q - to quit):
300
Converted number is 300.000000
Type the double numberic string (q - to quit):
400
Converted number is 400.000000
Type the double numberic string (q - to quit):
500
Converted number is 500.000000
Type the double numberic string (q - to quit):
q
*** End of Converting Strings to double Demo ***

*** Start of Converting Strings to long Demo ***
Type the long numeric string (q - to quit):
1000
Converted number is 1000
Type the long numeric string (q - to quit):
2000
Converted number is 2000
Type the long numeric string (q - to quit):
3000
Converted number is 3000
Type the long numeric string (q - to quit):
4000
Converted number is 4000
Type the long numeric string (q - to quit):
5000
Converted number is 5000
Type the long numeric string (q - to quit):
q
*** End of Converting Strings to long Demo ***

1 - Fundamentals
2 - Manipulation
3 - Converting
4 - Tokenizing
0 - Exit
Which module to run?
4
*** Start of Tokenizing Words Demo ***
Type a few words separated by space (q - to quit):
Writing a few words
Word #1 is 'Writing'
Word #2 is 'a'
Word #3 is 'few'
Word #4 is 'words'
Type a few words separated by space (q - to quit):
Writing a few words
Word #1 is 'Writing'
Word #2 is 'a'
Word #3 is 'few'
Word #4 is 'words'
Type a few words separated by space (q - to quit):
and then soe more
Word #1 is 'and'
Word #2 is 'then'
Word #3 is 'soe'
Word #4 is 'more'
Type a few words separated by space (q - to quit):
and even more after
Word #1 is 'and'
Word #2 is 'even'
Word #3 is 'more'
Word #4 is 'after'
Type a few words separated by space (q - to quit):
q
*** End of Tokenizing Words Demo ***

*** Start of Tokenizing Phrases Demo ***
Type a few phrases separated by comma(q - to quit):
eagle,hippo,platypus
Phrase #1 is 'eagle'
Phrase #2 is 'hippo'
Phrase #3 is 'platypus'
Type a few phrases separated by comma(q - to quit):
rhino,giraffe,salmon
Phrase #1 is 'rhino'
Phrase #2 is 'giraffe'
Phrase #3 is 'salmon'
Type a few phrases separated by comma(q - to quit):
preying mantis, rattlesnake, bengal tiger
Phrase #1 is 'preying mantis'
Phrase #2 is ' rattlesnake'
Phrase #3 is ' bengal tiger'
Type a few phrases separated by comma(q - to quit):
q
*** End of Tokenizing Phrases Demo ***

*** Start of Tokenizing Sentences Demo ***
Type a few sentences separated by dot(q - to quit):
lunar space module seven.coming in for a landing.roger that
Sentence #1 is 'lunar space module seven'
Sentence #2 is 'coming in for a landing'
Sentence #3 is 'roger that'
Type a few sentences separated by dot(q - to quit):
Yar har me hearties.I be swabbin the poop deck.Life's grand as a pirate
Sentence #1 is 'Yar har me hearties'
Sentence #2 is 'I be swabbin the poop deck'
Sentence #3 is 'Life's grand as a pirate'
Type a few sentences separated by dot(q - to quit):
q
*** End of Tokenizing Sentences Demo ***

1 - Fundamentals
2 - Manipulation
3 - Converting
4 - Tokenizing
0 - Exit
Which module to run?
0

C:\Users\Chris\OneDrive\Desktop\CPR_Final_Project\CPR_final_part_3\x64\Debug\CPR_final_part_3.exe (process 4260) exited with code 0.
Press any key to close this window . . .
